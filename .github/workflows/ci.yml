# Build/test/publish packages to registries and docs to GitHub Pages
name: CI/CD

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "publish"
  cancel-in-progress: false

jobs:
  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      # Fixes JS out of memory error; see https://github.com/actions/runner-images/issues/70
      NODE_OPTIONS: "--max_old_space_size=4096"
      # The base url in GitHub Pages where the docs will be deployed is typically the repo name
      DOCS_BASE_URL: m2c2kit
      # Use GitHub secrets to get token to authenticate with the public registry. Token must have publish access.
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      # URL of the registry where public packages will be published. For npm, the URL is https://registry.npmjs.org
      PUBLIC_REGISTRY_URL: https://registry.npmjs.org
      # Use GitHub secrets to get token to authenticate with the organization npm-compatible registry. Token must have publish access.
      ORG_NPM_TOKEN: ${{ secrets.ORG_NPM_TOKEN }}
      # URL of the organization npm-compatible registry where packages will be published. For GitHub Packages, the URL is https://npm.pkg.github.com
      ORG_REGISTRY_URL: https://npm.pkg.github.com
      # Name of the organization. Must match the scope in name field of package.json for packages that will be published to the organization registry.
      ORG_NAME: "@m2c2-project"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up docker compose
        uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: "2.23.0"
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
      # Configure .npmrc for public and organization registry
      # To set auth token for a registry, registry needs to be in the format of //registry.npmjs.org/:_authToken=...
      - run: npm config set registry $PUBLIC_REGISTRY_URL
      - run: 'npm config set $(echo $PUBLIC_REGISTRY_URL | awk -v TOKEN=$NPM_TOKEN -F[/:] ''{ print "//" $4 "/:_authToken=" TOKEN}'')'
      - run: npm config set $(echo $ORG_NAME:registry) $ORG_REGISTRY_URL
      - run: 'npm config set $(echo $ORG_REGISTRY_URL | awk -v TOKEN=$ORG_NPM_TOKEN -F[/:] ''{ print "//" $4 "/:_authToken=" TOKEN}'')'
      - name: Install dependencies
        run: npm ci
      # See repo root Dockerfile for why this step is needed only when running in a container, like in GitHub Actions
      - name: Build and install @m2c2kit/schema-util
        run: npm run build -w @m2c2kit/schema-util && npm install -E -D @m2c2kit/schema-util
      - name: Build
        run: npm run build
      # No need to run tests here because they will be run as part of the "Integration test" next step (see repo root Dockerfile, "RUN npm test")
      # - name: Test
      #   run: npm run test
      - name: Integration test
        run: npm run integration-test
        timeout-minutes: 15
      - name: Publish updated packages
        # only packages explicitly named in scripts/publish-updated-packages.mjs will be published
        run: npm run publish-updated
        # publish-updated will set an environment variable PUBLIC_PACKAGES_OK to indicate if there were no errors with the public packages
      - name: Trigger static site deployment workflow
        if: ${{ env.PUBLIC_PACKAGES_OK=='true' }}
        run: |
          curl -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.ORG_NPM_TOKEN }}" \
          https://api.github.com/repos/m2c2-project/static-site-approach/dispatches \
          -d '{"event_type":"package-published"}'
      - name: Trigger m2c2kit docs website deployment workflow
        if: ${{ env.PUBLIC_PACKAGES_OK=='true' }}
        run: |
          curl -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.ORG_NPM_TOKEN }}" \
          https://api.github.com/repos/m2c2-project/m2c2kit-docs/dispatches \
          -d '{"event_type":"package-published"}'
      - name: Build docs
        if: env.PUBLIC_PACKAGES_OK=='true'
        run: npm run build -w website
      - name: Setup Pages
        if: env.PUBLIC_PACKAGES_OK=='true'
        uses: actions/configure-pages@v5
      - name: Upload artifact
        if: env.PUBLIC_PACKAGES_OK=='true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: website/build
      - name: Deploy to GitHub Pages
        if: env.PUBLIC_PACKAGES_OK=='true'
        id: deployment
        uses: actions/deploy-pages@v4
